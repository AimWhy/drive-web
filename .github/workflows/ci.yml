name: Drive Web CI
on:
  pull_request:
    branches: [master]
env:
  REACT_APP_CRYPTO_SECRET: ${{ secrets.REACT_APP_CRYPTO_SECRET }}
  REACT_APP_STRIPE_PK: ${{ secrets.REACT_APP_STRIPE_PK }}
  REACT_APP_STRIPE_TEST_PK: ${{ secrets.REACT_APP_STRIPE_TEST_PK }}
  REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}
  REACT_APP_SEGMENT_KEY: ${{ secrets.REACT_APP_SEGMENT_KEY }}
  REACT_APP_MAGIC_IV: ${{ secrets.REACT_APP_MAGIC_IV }}
  REACT_APP_MAGIC_SALT: ${{ secrets.REACT_APP_MAGIC_SALT }}
  REACT_APP_CRYPTO_SECRET2: ${{ secrets.REACT_APP_CRYPTO_SECRET2 }}
  REACT_APP_RECAPTCHA_V3: ${{ secrets.REACT_APP_RECAPTCHA_V3 }}
  GENERATE_SOURCEMAP: ${{ secrets.GENERATE_SOURCEMAP }}
  CI: false

jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://npm.pkg.github.com'

      - run: echo "registry=https://registry.yarnpkg.com/" > .npmrc
      - run: echo "@internxt:registry=https://npm.pkg.github.com" >> .npmrc
      # You cannot read packages from other private repos with GITHUB_TOKEN
      # You have to use a PAT instead https://github.com/actions/setup-node/issues/49
      - run: echo //npm.pkg.github.com/:_authToken=${{ secrets.PERSONAL_ACCESS_TOKEN }} >> .npmrc
      - run: echo "always-auth=true" >> .npmrc
      - name: Install
        run: yarn
      - name: Unit test run
        run: yarn test:unit
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          start: yarn start
          command: yarn test:e2e
          wait-on: http://localhost:3000
      # after the test run completes
      # store videos and any screenshots
      # NOTE: screenshots will be generated only if E2E test failed
      # thus we store screenshots only on failures
      # Alternative: create and commit an empty cypress/screenshots folder
      # to always have something to upload
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-screenshots
          path: test/e2e/cypress/screenshots
      # Test run video was always captured, so this action uses "always()" condition
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: cypress-videos
          path: test/e2e/cypress/videos
      - name: Build
        run: yarn build
        env:
          CI: false
      - name: Install netlify
        run: npm install -g netlify
      - name: Deploy build
        env: 
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_PAT }}
        run: DEBUG=* netlify deploy --dir=build