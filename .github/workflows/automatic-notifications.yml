name: Notify Releases
on:
  push:
    branches: [master]

jobs:
  change-package-json-and-release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: get package version
        id: version
        uses: notiz-dev/github-action-json-property@release
        with: 
            path: 'package.json'
            prop_path: 'version'
      - run: echo ${{steps.version.outputs.prop}} 

      - name: Increment version number
        id: increment_version
        run: |
          version="${{steps.version.outputs.prop}}"
          regex='^v([0-9]+)\.([0-9]+)\.([0-99]+)$'
          if [[ $version =~ $regex ]]; then
            major="${BASH_REMATCH[1]}"
            minor="${BASH_REMATCH[2]}"
            patch="${BASH_REMATCH[3]}"
            next_version="v${major}.${minor}.$((patch+1))"
            echo "::set-output name=next_version::$next_version"
          fi

      - name: Test
        run: |
          echo ${{ steps.increment_version.outputs.new_version }}

      - name: Update package.json version
        uses: jossef/action-set-json-field@v2.1
        with:
          file: package.json
          field: version
          value: ${{ steps.increment_version.outputs.next_version }}
          
      - name: Commit updated package.json
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A
          git commit -m "docs(): update package ${{ steps.latest_version.outputs.next_version }}"
          git tag ${{ steps.latest_version.outputs.next_version }}

      - name: Push to repository 
        uses: actions/checkout@v2
        with: 
          token: ${{ secrets.CI_USER_GH_TOKEN }} 
      - name: Push changes to repository 
        run: git push origin master

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: ${{ steps.latest_version.outputs.next_version }}
          release_name: ${{ steps.latest_version.outputs.next_version }}
          body_path: ./last_release.txt
          draft: false
          prerelease: false
          
  get-latest-tag:
    runs-on: ubuntu-latest
    needs: change-package-json-and-release 
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2
      - name: Get latest tag 
        id: latest-tag
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: tags } = await github.repos.listTags({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            const latestTag = tags[0].name;
            console.log(latestTag);
            core.setOutput('latest_tag', latestTag);
      - name: Get latest release
        id: latest_release
        uses: cardinalby/git-get-release-action@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag: '${{ steps.latest-tag.outputs.latest_tag }}'
      - run: |
          echo '${{ steps.latest_release.outputs.body }}' >  new-file-feature-1.txt
          sed -e ':a' -e 'N' -e '$!ba' -e 's/\n/\\n/g' -e 's/^/"/' -e 's/$/"/' new-file-feature-1.txt > new-file-feature.txt
          cat new-file-feature.txt
      - name: Read file contents
        id: read-file-contents
        run: echo "::set-output name=file-features::$(cat new-file-feature.txt)"

      - name: Notify Release via Slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "Version": "${{ steps.latest-tag.outputs.latest_tag }}",
              "Repository": "${{ github.event.repository.name }}",
              "Product": "Drive",
              "Platform": "Web",
              "Support_Platforms": "Chrome, Firefox, Safari and Brave",
              "Description": ${{ steps.read-file-contents.outputs.file-features }}
              
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

